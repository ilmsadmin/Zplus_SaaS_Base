// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"

	"github.com/ilmsadmin/zplus-saas-base/internal/domain"
)

type AddUserToTenantInput struct {
	TenantID string `json:"tenantId"`
	UserID   string `json:"userId"`
	Role     string `json:"role"`
}

type AssignRoleInput struct {
	UserID   string `json:"userId"`
	RoleID   string `json:"roleId"`
	TenantID string `json:"tenantId"`
}

type AssignUserRoleInput struct {
	UserID   string `json:"userId"`
	TenantID string `json:"tenantId"`
	RoleID   string `json:"roleId"`
}

type AuditLogConnection struct {
	Nodes      []*domain.AuditLog `json:"nodes"`
	TotalCount int                `json:"totalCount"`
}

type CreateAPIKeyInput struct {
	TenantID    string     `json:"tenantId"`
	Name        string     `json:"name"`
	Permissions []string   `json:"permissions"`
	ExpiresAt   *time.Time `json:"expiresAt,omitempty"`
}

type CreateDomainInput struct {
	TenantID string `json:"tenantId"`
	Domain   string `json:"domain"`
}

type CreatePermissionInput struct {
	Name        string  `json:"name"`
	Resource    string  `json:"resource"`
	Action      string  `json:"action"`
	Description *string `json:"description,omitempty"`
}

type CreateRoleInput struct {
	Name        string   `json:"name"`
	Description *string  `json:"description,omitempty"`
	TenantID    *string  `json:"tenantId,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
}

type CreateSystemAdminInput struct {
	Email     string  `json:"email"`
	Username  *string `json:"username,omitempty"`
	FirstName string  `json:"firstName"`
	LastName  string  `json:"lastName"`
	Phone     *string `json:"phone,omitempty"`
}

type CreateTenantAdminInput struct {
	TenantID  string  `json:"tenantId"`
	Email     string  `json:"email"`
	Username  *string `json:"username,omitempty"`
	FirstName string  `json:"firstName"`
	LastName  string  `json:"lastName"`
	Phone     *string `json:"phone,omitempty"`
}

type CreateTenantInput struct {
	Name      string               `json:"name"`
	Subdomain string               `json:"subdomain"`
	Settings  *TenantSettingsInput `json:"settings,omitempty"`
}

type CreateUserInput struct {
	Email         string  `json:"email"`
	Username      *string `json:"username,omitempty"`
	FirstName     string  `json:"firstName"`
	LastName      string  `json:"lastName"`
	Phone         *string `json:"phone,omitempty"`
	EmailVerified *bool   `json:"emailVerified,omitempty"`
	PhoneVerified *bool   `json:"phoneVerified,omitempty"`
}

type Mutation struct {
}

type PaginationInput struct {
	Limit  *int `json:"limit,omitempty"`
	Offset *int `json:"offset,omitempty"`
}

type PermissionConnection struct {
	Nodes      []*domain.Permission `json:"nodes"`
	TotalCount int                  `json:"totalCount"`
}

type Query struct {
}

type RoleConnection struct {
	Nodes      []*domain.Role `json:"nodes"`
	TotalCount int            `json:"totalCount"`
}

type SetUserPreferenceInput struct {
	UserID   string  `json:"userId"`
	TenantID *string `json:"tenantId,omitempty"`
	Category string  `json:"category"`
	Key      string  `json:"key"`
	Value    string  `json:"value"`
}

type Subscription struct {
}

type TenantBrandingInput struct {
	Logo           *string `json:"logo,omitempty"`
	FaviconURL     *string `json:"faviconURL,omitempty"`
	PrimaryColor   *string `json:"primaryColor,omitempty"`
	SecondaryColor *string `json:"secondaryColor,omitempty"`
}

type TenantConnection struct {
	Nodes      []*domain.Tenant `json:"nodes"`
	TotalCount int              `json:"totalCount"`
}

type TenantSettingsInput struct {
	Theme    *string              `json:"theme,omitempty"`
	Language *string              `json:"language,omitempty"`
	Timezone *string              `json:"timezone,omitempty"`
	Features []string             `json:"features,omitempty"`
	Branding *TenantBrandingInput `json:"branding,omitempty"`
}

type UpdateProfileInput struct {
	FirstName *string `json:"firstName,omitempty"`
	LastName  *string `json:"lastName,omitempty"`
	Phone     *string `json:"phone,omitempty"`
	Bio       *string `json:"bio,omitempty"`
	Metadata  *string `json:"metadata,omitempty"`
}

type UpdateRoleInput struct {
	Name        *string  `json:"name,omitempty"`
	Description *string  `json:"description,omitempty"`
	Permissions []string `json:"permissions,omitempty"`
}

type UpdateTenantInput struct {
	ID       string               `json:"id"`
	Name     *string              `json:"name,omitempty"`
	Status   *string              `json:"status,omitempty"`
	Settings *TenantSettingsInput `json:"settings,omitempty"`
}

type UpdateUserInput struct {
	ID            string  `json:"id"`
	Username      *string `json:"username,omitempty"`
	FirstName     *string `json:"firstName,omitempty"`
	LastName      *string `json:"lastName,omitempty"`
	Phone         *string `json:"phone,omitempty"`
	Avatar        *string `json:"avatar,omitempty"`
	Status        *string `json:"status,omitempty"`
	EmailVerified *bool   `json:"emailVerified,omitempty"`
	PhoneVerified *bool   `json:"phoneVerified,omitempty"`
	Metadata      *string `json:"metadata,omitempty"`
}

type UpdateUserPreferencesInput struct {
	UserID      string  `json:"userId"`
	TenantID    *string `json:"tenantId,omitempty"`
	Preferences string  `json:"preferences"`
}

type UpdateUserRolesInput struct {
	UserID   string   `json:"userId"`
	TenantID string   `json:"tenantId"`
	RoleIds  []string `json:"roleIds"`
}

type UserConnection struct {
	Nodes      []*domain.User `json:"nodes"`
	TotalCount int            `json:"totalCount"`
}

type UserRoleConnection struct {
	Nodes      []*domain.UserRole `json:"nodes"`
	TotalCount int                `json:"totalCount"`
}
